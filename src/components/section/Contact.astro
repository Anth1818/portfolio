---
import { Icon } from "astro-icon/components";
import LayoutSection from "../../layouts/LayoutSection.astro";
import AnchorWithIconAndLabel from "../AnchorWithIconAndLabel.astro";
import IconWithLabel from "../IconWithLabel.astro";
import Spinner from "../Spinner.astro";
import ContactForm from "../ContactForm";

const { lang } = Astro.props;
---

<LayoutSection
  title={lang === "es" ? "Contacto" : "Contact"}
  colorSection="section-primary"
  id="contact"
>
  <div
    class="w-full h-auto md:p-10 gap-10 flex md:justify-around md:items-center flex-col md:flex-row"
  >
    <aside
      class="flex flex-col gap-12 w-auto p-6 self-center-safe md:self-start"
    >
      <!-- Linkedin icon and link -->
      <div class="flex gap-4 items-center">
        <AnchorWithIconAndLabel
          href="https://www.linkedin.com/in/anthony-ruiz-7820b7161/"
          iconName="Linkedin"
          label="Linkedin"
        />
        <span class="font-semibold" id="linkedin-text"
          >linkedin.com/in/anthony-ruiz-7820b7161/</span
        >
        <div class="relative group">
          <span
            id="linkedin-tooltip"
            class="hidden lg:block absolute -top-10 transform -translate-y-1/2 mt-2 text-white text-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300 font-bold"
          >
            Copy to clipboard
          </span>
          <Icon
            id="linkedin-copy"
            name="Clipboard"
            class="text-2xl cursor-pointer"
          />
          <span
            id="linkedin-tooltip-mobile"
            class="text-xs lg:hidden absolute -top-2 transform -translate-y-1/2"
            >Copy</span
          >
        </div>
      </div>

      <!-- Github icon and link -->
      <div class="flex gap-4 items-center">
        <AnchorWithIconAndLabel
          href="https://github.com/anth1818"
          iconName="Github"
          label="Github"
        />
        <span class="font-semibold" id="github-text">github.com/anth1818</span>
        <div class="relative group">
          <span
            id="github-tooltip"
            class="hidden lg:block absolute -top-10 transform -translate-y-1/2 mt-2 text-white text-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300 font-bold"
          >
            Copy to clipboard
          </span>
          <Icon
            id="github-copy"
            name="Clipboard"
            class="text-2xl cursor-pointer"
          />
          <span
            id="github-tooltip-mobile"
            class="text-xs lg:hidden absolute -top-2 transform -translate-y-1/2"
            >Copy</span
          >
        </div>
      </div>

      <!-- Location  -->
      <div class="flex gap-4 items-center">
        <IconWithLabel iconName="location" label="Location" class="text-2xl" />
        <span class="font-semibold">Caracas,Venezuela</span>
      </div>
    </aside>

    <ContactForm client:load lang={lang}/>
  </div>
</LayoutSection>

<!-- <script type="text/javascript">
  const langUrl = window.location.href;
  const IsSpanish = langUrl.includes("es");

  const form = document.getElementById("contact-form");

  form?.addEventListener("submit", function (event) {
    event.preventDefault();
    const spinner = document.getElementById("spinner");
    const textSend = document.getElementById("send");
    spinner?.classList.remove("hidden");
    spinner?.classList.add("flex");
    textSend?.classList.add("hidden");

    emailjs
      .sendForm("contact_service", "contact_template", this)
      .then(
        () => {
          event.preventDefault();
          if (IsSpanish) {
            window.location.href = "/EmailSentEs";
          } else {
            window.location.href = "/EmailSent";
          }

          console.log("Email sent successfully");
        },
        (error) => {
          if (IsSpanish) {
            alert("Error al enviar el email, por favor intente nuevamente ");
          }
          alert("Error sending email, please try again.");
          console.log("Error sending email: ", error);
        },
      )
      .finally(() => {
        spinner?.classList.add("hidden");
        textSend?.classList.remove("hidden");
        console.log("hola");
      });
  });
</script> -->

<script>
  // Función para copiar texto al portapapeles
  function copyToClipboard(textId: string, tooltipId: string) {
    const textElement = document.getElementById(textId);
    const tooltipElement = document.getElementById(tooltipId);
    const tooltipMobileElement = document.getElementById(`${tooltipId}-mobile`);
    if (tooltipMobileElement) {
      tooltipMobileElement.innerText = "Copied";
      setTimeout(() => {
        tooltipMobileElement.innerText = "Copy";
      }, 2000); // Cambia el texto de nuevo después de 2 segundos
    }

    if (textElement) {
      const text = textElement.innerText;
      navigator.clipboard.writeText(text).then(() => {
        if (tooltipElement) {
          tooltipElement.innerText = "Copied";
          setTimeout(() => {
            tooltipElement.innerText = "Copy to clipboard";
          }, 2000); // Cambia el texto de nuevo después de 2 segundos
        }
      });
    }
  }

  // Agregar eventos a los botones de copiar
  const linkedinCopyButton = document.getElementById("linkedin-copy");
  const githubCopyButton = document.getElementById("github-copy");

  linkedinCopyButton?.addEventListener("click", () =>
    copyToClipboard("linkedin-text", "linkedin-tooltip"),
  );

  githubCopyButton?.addEventListener("click", () =>
    copyToClipboard("github-text", "github-tooltip"),
  );
</script>
